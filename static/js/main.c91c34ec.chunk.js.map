{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["SectionContainer","styled","section","Section","title","children","ButtonFeedback","button","FeedbackOptions","options","onLeaveFeedback","map","option","feedback","console","log","type","onClick","FeedbackButton","propTypes","PropTypes","arrayOf","string","isRequired","func","Notification","message","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAEaA,EAAmBC,IAAOC,QAAV,8C,OCcdC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCJMC,EAAiBL,IAAOM,OAAV,8ICerBC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OAfJ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,gBAGlC,OAFAI,QAAQC,IAAIF,GAGV,cAACP,EAAD,CACEU,KAAK,SACL,gBAAeH,EACfI,QAASP,EAHX,SAKGG,IAOHK,CAAe,CAAEL,SAAUD,EAAQF,wBAIvCF,EAAgBW,UAAY,CAC1BV,QAASW,IAAUC,QAAQD,IAAUE,OAAOC,YAAYA,WACxDb,gBAAiBU,IAAUI,KAAKD,YAEnBf,QCpBAiB,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCiC3BC,EA/BI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,2BAEA,OACE,qCACGD,EAAQ,GACP,+BACE,wCAAWH,KACX,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,sDAAyBC,EAAzB,UAGO,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BCoC7BO,E,4MAlDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,eAAiB,YAAiB,IACxBtB,EADuB,EAAbuB,OACUC,QAApBxB,SACR,EAAKyB,UAAS,SAAAC,GAAS,sBACpB1B,EAAW0B,EAAU1B,GAAY,O,EAItC2B,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBW,gCAAkC,WAChC,IAAQb,EAAS,EAAKM,MAAdN,KACFG,EAAQ,EAAKS,qBACnB,OAAOT,EAAQW,KAAKC,MAAOf,EAAOG,EAAS,KAAO,G,4CAGpD,WACE,MAA+Ba,KAAKV,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQa,KAAKJ,qBACbR,EAA6BY,KAAKH,kCACxC,OACE,eAACzC,EAAD,WACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAASoC,OAAOC,KAAKF,KAAKV,OAC1BxB,gBAAiBkC,KAAKT,mBAG1B,cAAC,EAAD,CAAS/B,MAAM,aAAf,SACE,cAAC,EAAD,CACEwB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,2BAA4BA,a,GA3CtBe,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c91c34ec.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  padding: 40px;\n`;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const ButtonFeedback = styled.button`\n  border-radius: 4px;\n  border: solid grey;\n  border-radius: 4px;\n  border: solid grey;\n  margin-left: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonFeedback } from './FeedbackOptions.styled';\n\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\n  console.log(feedback);\n\n  return (\n    <ButtonFeedback\n      type=\"button\"\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n    >\n      {feedback}\n    </ButtonFeedback>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map(option =>\n    FeedbackButton({ feedback: option, onLeaveFeedback }),\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import PropTypes from 'prop-types';\n\nimport Notification from '../Notification';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positiveFeedbackPercentage,\n}) => {\n  return (\n    <>\n      {total > 0 && (\n        <ul>\n          <li>Good: {good}</li>\n          <li>Neutral:{neutral}</li>\n          <li>Bad:{bad}</li>\n          <li>Total:{total}</li>\n          <li>Positive Percentage:{positiveFeedbackPercentage}%</li>\n        </ul>\n      )}\n      {total === 0 && <Notification message=\"No Feedback given\" />}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedbackPercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import { Component } from 'react';\n\nimport { SectionContainer } from '../Section/Section.styled';\nimport Section from '../Section';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Statistics from '../Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <SectionContainer>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positiveFeedbackPercentage={positiveFeedbackPercentage}\n          />\n        </Section>\n      </SectionContainer>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}