{"version":3,"sources":["components/Section/Section.jsx","components/utils/constants.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["Section","title","children","FEEDBACK_OPTIONS","FeedbackOptions","options","onLeaveFeedback","map","option","feedback","type","onClick","FeedbackButton","propTypes","PropTypes","arrayOf","string","isRequired","func","Notification","message","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCJQC,EAFU,CAAC,OAAQ,UAAW,O,gBCUvCC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OATJ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,gBAClC,OACE,wBAAQI,KAAK,SAAS,gBAAeD,EAAUE,QAASL,EAAxD,SACGG,IAOHG,CAAe,CAAEH,SAAUD,EAAQF,wBAIvCF,EAAgBS,UAAY,CAC1BR,QAASS,IAAUC,QAAQD,IAAUE,OAAOC,YAC5CX,gBAAiBQ,IAAUI,KAAKD,YAEnBb,QCbAe,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCiC3BC,EA/BI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,2BAEA,OACE,qCACGD,EAAQ,GACP,+BACE,wCAAWH,KACX,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,sDAAyBC,EAAzB,UAGO,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BCoC7BO,E,4MAlDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,eAAiB,YAAiB,IACxBpB,EADuB,EAAbqB,OACUC,QAApBtB,SACR,EAAKuB,UAAS,SAAAC,GAAS,sBACpBxB,EAAWwB,EAAUxB,GAAY,O,EAItCyB,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBW,gCAAkC,WAChC,IAAQb,EAAS,EAAKM,MAAdN,KACFG,EAAQ,EAAKS,qBACnB,OAAOT,EAAQW,KAAKC,MAAOf,EAAOG,EAAS,KAAO,G,4CAGpD,WACE,MAA+Ba,KAAKV,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQa,KAAKJ,qBACbR,EAA6BY,KAAKH,kCACxC,OACE,gCACE,cAAC,EAAD,CAASlC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEI,QAASF,EACTG,gBAAiBgC,KAAKT,mBAG1B,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACE,cAAC,EAAD,CACEqB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,2BAA4BA,a,GA3CtBa,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae1ce73c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\r\n\r\nexport default FEEDBACK_OPTIONS;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button type=\"button\" data-feedback={feedback} onClick={onLeaveFeedback}>\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option =>\r\n    FeedbackButton({ feedback: option, onLeaveFeedback }),\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Notification from '../Notification';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positiveFeedbackPercentage,\r\n}) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral:{neutral}</li>\r\n          <li>Bad:{bad}</li>\r\n          <li>Total:{total}</li>\r\n          <li>Positive Percentage:{positiveFeedbackPercentage}%</li>\r\n        </ul>\r\n      )}\r\n      {total === 0 && <Notification message=\"No Feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedbackPercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import { Component } from 'react';\r\n\r\nimport Section from '../Section';\r\nimport FEEDBACK_OPTIONS from '../utils/constants';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleFeedback = ({ target }) => {\r\n    const { feedback } = target.dataset;\r\n    this.setState(prevState => ({\r\n      [feedback]: prevState[feedback] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return total ? Math.round((good / total) * 100) : 0;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={FEEDBACK_OPTIONS}\r\n            onLeaveFeedback={this.handleFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positiveFeedbackPercentage={positiveFeedbackPercentage}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}